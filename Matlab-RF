%% 清空环境变量
close all; clear; clc;  % 合并清空命令

%% 输入数据
rawdata = readmatrix('MATLAB-AFB1-climate correlations-noRH.xlsx');  % 使用 readmatrix 更现代
[M, N] = size(rawdata);  % 行数和列数

critical_level = 20;  % 设置临界值

%% 数据过滤
data0 = rawdata(rawdata(:, N) >= critical_level, :);  % 直接过滤超标数据
latitude = data0(:, 5);
temperature = data0(:, 7);

% 计算纬度和温度的极值
Max_latitude = max(latitude);
Min_latitude = min(latitude);
Max_temperature = max(temperature);
Min_temperature = min(temperature);

% 使用逻辑条件合并 index_2 和 index_3
index_all = find(rawdata(:, 5) < Max_latitude & rawdata(:, 5) > Min_latitude & rawdata(:, 7) > Min_temperature);
filtered_data = rawdata(index_all, :);  % 使用描述性变量名

%% 数据标记
filtered_data0 = filtered_data(:, 5:N-1);
[M_c, N_c] = size(filtered_data0);
index_c = find(filtered_data(:, N) >= critical_level);
data_class = zeros(M_c, 1);
data_class(index_c) = 1;

% 进一步分离数据
index_c_0 = find(filtered_data(:, N) < critical_level);
filtered_data0_0 = filtered_data0(index_c_0, :);
filtered_data0_1 = filtered_data0(index_c, :);

%% 绘图
% 纬度与平均温的交互图
figure(1);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 3), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 3), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Temperature (℃)');
title('Latitude vs Temperature for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与气压的交互图
figure(2);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 2), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 2), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Pressure (hPa)');
title('Latitude vs Pressure for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与最高温的交互图
figure(3);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 4), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 4), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Max Temperature (℃)');
title('Latitude vs Max Temperature for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与最低温的交互图
figure(4);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 5), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 5), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Min Temperature (℃)');
title('Latitude vs Min Temperature for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与降雨的交互图
figure(5);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 6), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 6), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Precipitation (mm)');
title('Latitude vs Precipitation for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与蒸发的交互图
figure(7);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 8), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 8), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Evaporation (mm)');
title('Latitude vs Evaporation for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;

% 纬度与风速的交互图
figure(8);
hold on;
plot(filtered_data0_0(:, 1), filtered_data0_0(:, 9), 'b.', 'MarkerSize', 10);  % 未超标样品
plot(filtered_data0_1(:, 1), filtered_data0_1(:, 9), 'r*', 'MarkerSize', 10);  % 超标样品
xlabel('Latitude');
ylabel('Wind Speed (m/s)');
title('Latitude vs Wind Speed for Exceeding and Non-Exceeding Samples');
legend('Non-exceeding', 'Exceeding');
grid on;
hold off;
%%
filtered_data0_666 = filtered_data(:, 6:N-1);
[M_c, N_c] = size(filtered_data0_666);
index_c = find(filtered_data(:, N) >= critical_level);
data_class = zeros(M_c, 1);
data_class(index_c) = 1;

% 进一步分离数据
index_c_0 = find(filtered_data(:, N) < critical_level);
filtered_data0_0 = filtered_data0_666(index_c_0, :);
filtered_data0_1 = filtered_data0_666(index_c, :);

%% 数据过采样
oversampling_data = [filtered_data0_666; filtered_data0_1; repmat(filtered_data0_1, 5, 1)];  % 简化合并
oversampling_class = [data_class; ones(5 * length(index_c), 1)];

%% 数据标准化及划分
data_standard = zscore(oversampling_data);
rng(666);  % 设置随机数种子
cv = cvpartition(oversampling_class, 'holdout', 0.2);
Xtrain = data_standard(training(cv), :);
Ytrain = oversampling_class(training(cv), :);
Xtest = data_standard(test(cv), :);
Ytest = oversampling_class(test(cv), :);

%% 随机森林模型
nTree = 50;  % 决策树数目
B_7features = TreeBagger(nTree, Xtrain, Ytrain, 'OOBPredictorImportance', 'on');

Y_rf = str2double(predict(B_7features, Xtest));  % 直接转换
C_rf = confusionmat(Ytest, Y_rf);

Y_rf_t = str2double(predict(B_7features, Xtrain));  % 训练集预测
C_rf_t = confusionmat(Ytrain, Y_rf_t);

%% 绘制混淆矩阵
figure(2);
subplot(1, 2, 1);
heatmap(C_rf_t, 'Title', 'Training Set Confusion Matrix', 'XLabel', 'Predicted', 'YLabel', 'True');
colorbar;

subplot(1, 2, 2);
heatmap(C_rf, 'Title', 'Test Set Confusion Matrix', 'XLabel', 'Predicted', 'YLabel', 'True');
colorbar;

%% 特征重要性可视化 
figure(3);
imp = B_7features.OOBPermutedVarDeltaError;
featureNames = {'Pressure', 'Mean Temperature', 'Max Temperature', 'Min Temperature', 'Prcipitation', 'Evaporation', 'Wind Speed'};
% 对重要性进行排序
[sortedImp, sortIdx] = sort(imp, 'descend');  % 从大到小排序
sortedFeatureNames = featureNames(sortIdx);  % 按照排序的索引重新排列特征名称

bar(sortedImp);
xlabel('Features');
ylabel('Importance');
title('Feature Importance from Random Forest');
set(gca, 'XTickLabel', sortedFeatureNames, 'XTick', 1:length(sortedImp));
grid on;

%%
[X, Y, T, AUC] = perfcurve(Ytest, Y_rf, 1);
figure;
plot(X, Y);
xlabel('False positive rate');
ylabel('True positive rate');
title(['ROC Curve, AUC = ' num2str(AUC)]);




